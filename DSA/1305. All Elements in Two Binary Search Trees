/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> ans;
    void solve(TreeNode* root1 = NULL, TreeNode* root2= NULL)
    {
         if(!root1  && !root2) return;
            
         if(root1 && root2)
         {
             solve(root1->left, root2->left);
             int x = root1->val;
             int y  = root2->val;
             
              ans.push_back(min(x, y));
              ans.push_back(max(x, y));
             solve(root1->right, root2->right);
         }
         else if(root1){
              solve(root1->left);
             ans.push_back(root1->val);
             solve(root1->right);
         }
            
        else if(root2){
             solve(root2->left);
             ans.push_back(root2->val);
             solve(root2->right);
        }
    }
    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {
    
        if(!root1  && !root2)
            return ans;
        
        solve(root1, root2);
        sort(ans.begin(), ans.end());
        return ans;
        
    }
};
